buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.2.1"
    }
}

plugins {
    id 'com.github.autostyle' version '3.2'
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.jlleitschuh.gradle.ktlint-idea'

group 'com.lunatech'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main']
    test.kotlin.srcDirs = test.java.srcDirs = ['src/test']
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"

    implementation "io.github.microutils:kotlin-logging-jvm:3.0.4"
    implementation "ch.qos.logback:logback-classic:1.4.5"
    implementation "com.newrelic.logging:logback:2.6.0"

    implementation "com.google.api-client:google-api-client:2.2.0"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2"
    implementation "io.github.config4k:config4k:0.5.0"
    implementation "org.flywaydb:flyway-core:9.14.1"
    implementation "org.ktorm:ktorm-core:3.6.0"
    implementation "com.zaxxer:HikariCP:5.0.1"
    implementation "org.postgresql:postgresql:42.5.1"
    implementation "org.quartz-scheduler:quartz:2.3.2"

    implementation "io.ktor:ktor-server-status-pages:2.2.2"
    implementation "io.ktor:ktor-server-default-headers:2.2.2"
    implementation "io.ktor:ktor-server-cors:2.2.3"
    implementation "io.ktor:ktor-server-content-negotiation-jvm:2.2.2"
    implementation "io.ktor:ktor-server-netty-jvm:2.2.3"
    implementation "io.ktor:ktor-server-core-jvm:2.2.2"
    implementation "io.ktor:ktor-server-host-common-jvm:2.2.2"
    implementation "io.ktor:ktor-server-auth-jvm:2.2.2"
    implementation "io.ktor:ktor-server-sessions-jvm:2.2.2"
    implementation "io.ktor:ktor-serialization-jackson:2.2.2"
    implementation "io.ktor:ktor-client-core-jvm:2.2.2"
    implementation "io.ktor:ktor-client-core-jvm:2.2.2"
    implementation "io.ktor:ktor-client-apache-jvm:2.2.2"
    implementation "io.ktor:ktor-client-logging-jvm:2.2.2"
    testImplementation "io.ktor:ktor-server-tests-jvm:2.2.2"
}

autostyle {
    kotlin {
        // optionally takes a version
        ktlint()
        // Optional user arguments can be set as such:
        ktlint {
            userData(['indent_size': '2', 'continuation_indent_size' : '2'])
        }
    }
    kotlinGradle {
        // same as kotlin, but for .gradle.kts files (defaults to '*.gradle.kts')
        filter.include 'additionalScripts/*.gradle.kts'

        ktlint()

        // Optional user arguments can be set as such:
        ktlint {
            userData(['indent_size': '2', 'continuation_indent_size' : '2'])
        }
    }
}

task buildAll(type: Exec, dependsOn: ['buildFrontApp']) {
    group "Build All App"
    description 'Build All App'
    executable "./gradlew"
    args "--no-daemon", "assemble"
}

//Build React App
task buildFrontApp(type: Exec, dependsOn: ['installReactApp']) {
    group "Front App"
    description 'Build React App'
    executable "npm"
    args "run-script", "build", "--prefix", "./frontend/"
}

//Install package npm for front app (React)
task installReactApp(type: Exec) {
    group "Front App"
    description 'Build React App'
    executable "npm"
    args "install", "--prefix", "./frontend/"
}

